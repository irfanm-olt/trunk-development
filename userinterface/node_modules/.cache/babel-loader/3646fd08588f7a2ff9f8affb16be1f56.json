{"ast":null,"code":"import _objectSpread from \"/Users/optiologicdeveloper/rnProjects/userinterface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as Actions from './constants';\n\nvar isEmpty = require(\"is-empty\");\n\nvar initialState = {\n  loading: false,\n  partSections: [],\n  errorData: '',\n  successData: false,\n  pager: {}\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    /**\n     * add car\n     */\n    case Actions.ADD_PART_SECTION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case Actions.ADD_PART_SECTION_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //partSections: state.partSections.concat(action.payload),\n        pager: state.partSections.concat(action.pager),\n        loading: false\n      });\n\n    case Actions.ADD_PART_SECTION_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.payload,\n        loading: false\n      });\n\n    /**\n     * load master\n     */\n\n    case Actions.LOAD_PART_SECTION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case Actions.LOAD_PART_SECTION_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        partSections: action.payload,\n        loading: false,\n        pager: action.pager\n      });\n\n    case Actions.LOAD_PART_SECTION_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.payload,\n        loading: false\n      });\n\n    /**\n     * delete part section\n     */\n\n    case Actions.DELETE_PART_SECTION_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        partSections: state.partSections.filter(function (item) {\n          return item.ID !== action.payload;\n        }),\n        successData: false\n      });\n\n    case Actions.DELETE_PART_SECTION_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        successData: false,\n        deleteErrorData: action.error,\n        errorData: ''\n      });\n\n    /**\n     * update part section\n     */\n\n    case Actions.UPDATE_PART_SECTION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case Actions.UPDATE_PART_SECTION_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        partSections: state.partSections.map(function (items, index) {\n          return items.ID === action.payload[0].ID ? _objectSpread(_objectSpread({}, items), {}, {\n            Name: action.payload[0].Name\n          }) : items;\n        }),\n        loading: false\n      });\n\n    case Actions.UPDATE_PART_SECTION_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorData: action.error,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/optiologicdeveloper/rnProjects/userinterface/src/modules/masters/partSection/reducer.js"],"names":["Actions","isEmpty","require","initialState","loading","partSections","errorData","successData","pager","state","action","type","ADD_PART_SECTION","ADD_PART_SECTION_SUCCESS","concat","ADD_PART_SECTION_ERROR","data","payload","LOAD_PART_SECTION","LOAD_PART_SECTION_SUCCESS","LOAD_PART_SECTION_ERROR","DELETE_PART_SECTION_SUCCESS","filter","item","ID","DELETE_PART_SECTION_ERROR","deleteErrorData","error","UPDATE_PART_SECTION","UPDATE_PART_SECTION_SUCCESS","map","items","index","Name","UPDATE_PART_SECTION_ERROR"],"mappings":"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","sourcesContent":["import * as Actions from './constants';\nconst isEmpty = require(\"is-empty\");\nconst initialState = {\n    loading: false,\n    partSections: [],\n    errorData:'',\n    successData: false,\n    pager: {}\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        /**\n         * add car\n         */\n        case Actions.ADD_PART_SECTION:\n            return {\n                ...state,\n                loading: true,\n            };\n        case Actions.ADD_PART_SECTION_SUCCESS:\n            return {\n                ...state,\n                //partSections: state.partSections.concat(action.payload),\n                pager: state.partSections.concat(action.pager),\n                loading: false,\n            };\n        case Actions.ADD_PART_SECTION_ERROR:\n            return {\n                ...state,\n                data: action.payload,\n                loading: false,\n            };\n        /**\n         * load master\n         */\n        case Actions.LOAD_PART_SECTION:\n            return {\n                ...state,\n                loading: true,\n            };\n        case Actions.LOAD_PART_SECTION_SUCCESS:\n            return {\n                ...state,\n                partSections: action.payload,\n                loading: false,\n                pager: action.pager\n            };\n        case Actions.LOAD_PART_SECTION_ERROR:\n            return {\n                ...state,\n                data: action.payload,\n                loading: false,\n            };\n        /**\n         * delete part section\n         */\n         case Actions.DELETE_PART_SECTION_SUCCESS:\n            return {\n                ...state,\n                partSections: state.partSections.filter(item => item.ID !== action.payload),\n                successData: false\n            }\n        case Actions.DELETE_PART_SECTION_ERROR:\n            return {\n                ...state,\n                successData: false,\n                deleteErrorData: action.error,\n                errorData: '',\n            }\n        /**\n         * update part section\n         */\n         case Actions.UPDATE_PART_SECTION:\n            return {\n                ...state,\n                loading: true,\n            };\n        case Actions.UPDATE_PART_SECTION_SUCCESS:\n            return {\n                ...state,\n                partSections: state.partSections.map(    \n                    (items, index) => \n                        items.ID === action.payload[0].ID ? \n                            {...items, Name : action.payload[0].Name }    \n                                : items\n                    ),\n                loading: false,\n            };\n        case Actions.UPDATE_PART_SECTION_ERROR:\n            return {\n                ...state,\n                errorData: action.error,\n                loading: false,\n            };\n        default: \n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}