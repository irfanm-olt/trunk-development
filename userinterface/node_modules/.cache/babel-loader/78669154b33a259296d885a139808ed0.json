{"ast":null,"code":"import _objectSpread from \"/Users/optiologicdeveloper/rnProjects/userinterface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as Actions from './constants';\n\nvar isEmpty = require(\"is-empty\");\n\nvar initialState = {\n  loading: false,\n  parts: [],\n  pager: {}\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    /**\n     * add car\n     */\n    case Actions.ADD_PART:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case Actions.ADD_PART_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //parts: state.parts.concat(action.payload),\n        pager: state.parts.concat(action.pager),\n        loading: false\n      });\n\n    case Actions.ADD_PART_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.payload,\n        loading: false\n      });\n\n    /**\n     * load master\n     */\n\n    case Actions.LOAD_PART:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case Actions.LOAD_PART_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        parts: action.partName,\n        partSection: action.partSection,\n        loading: false,\n        pager: action.pager\n      });\n\n    case Actions.LOAD_PART_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.payload,\n        loading: false\n      });\n\n    /**\n     * DELETE PART\n     */\n\n    case Actions.DELETE_PART_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //parts: state.parts.filter(item => item.ID !== action.payload),\n        pager: state.parts.filter(function (item) {\n          return item.ID !== action.payload;\n        }),\n        successData: false\n      });\n\n    case Actions.DELETE_PART_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        successData: false,\n        deleteErrorData: action.error,\n        errorData: ''\n      });\n\n    /**\n     * UPDATE PART\n     */\n\n    case Actions.UPDATE_PART:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case Actions.UPDATE_PART_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pager: state.parts.map(function (items, index) {\n          return items.ID === action.payload[0].ID ? _objectSpread(_objectSpread({}, items), {}, {\n            Name: action.payload[0].Name\n          }) : items;\n        }),\n        loading: false\n      });\n\n    case Actions.UPDATE_PART_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorData: action.error,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/optiologicdeveloper/rnProjects/userinterface/src/modules/masters/part/reducer.js"],"names":["Actions","isEmpty","require","initialState","loading","parts","pager","state","action","type","ADD_PART","ADD_PART_SUCCESS","concat","ADD_PART_ERROR","data","payload","LOAD_PART","LOAD_PART_SUCCESS","partName","partSection","LOAD_PART_ERROR","DELETE_PART_SUCCESS","filter","item","ID","successData","DELETE_PART_ERROR","deleteErrorData","error","errorData","UPDATE_PART","UPDATE_PART_SUCCESS","map","items","index","Name","UPDATE_PART_ERROR"],"mappings":";AAAA,OAAO,KAAKA,OAAZ,MAAyB,aAAzB;;AACA,IAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI;AACR;AACA;AACQ,SAAKT,OAAO,CAACU,QAAb;AACI,6CACOH,KADP;AAEIH,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKJ,OAAO,CAACW,gBAAb;AACI,6CACOJ,KADP;AAEI;AACAD,QAAAA,KAAK,EAAEC,KAAK,CAACF,KAAN,CAAYO,MAAZ,CAAmBJ,MAAM,CAACF,KAA1B,CAHX;AAIIF,QAAAA,OAAO,EAAE;AAJb;;AAMJ,SAAKJ,OAAO,CAACa,cAAb;AACI,6CACON,KADP;AAEIO,QAAAA,IAAI,EAAEN,MAAM,CAACO,OAFjB;AAGIX,QAAAA,OAAO,EAAE;AAHb;;AAKJ;AACR;AACA;;AACQ,SAAKJ,OAAO,CAACgB,SAAb;AACI,6CACOT,KADP;AAEIH,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKJ,OAAO,CAACiB,iBAAb;AACI,6CACOV,KADP;AAEIF,QAAAA,KAAK,EAAEG,MAAM,CAACU,QAFlB;AAGIC,QAAAA,WAAW,EAAEX,MAAM,CAACW,WAHxB;AAIIf,QAAAA,OAAO,EAAE,KAJb;AAKIE,QAAAA,KAAK,EAAEE,MAAM,CAACF;AALlB;;AAOJ,SAAKN,OAAO,CAACoB,eAAb;AACI,6CACOb,KADP;AAEIO,QAAAA,IAAI,EAAEN,MAAM,CAACO,OAFjB;AAGIX,QAAAA,OAAO,EAAE;AAHb;;AAKJ;AACR;AACA;;AACS,SAAKJ,OAAO,CAACqB,mBAAb;AACG,6CACOd,KADP;AAEI;AACAD,QAAAA,KAAK,EAAEC,KAAK,CAACF,KAAN,CAAYiB,MAAZ,CAAmB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAL,KAAYhB,MAAM,CAACO,OAAvB;AAAA,SAAvB,CAHX;AAIIU,QAAAA,WAAW,EAAE;AAJjB;;AAMJ,SAAKzB,OAAO,CAAC0B,iBAAb;AACI,6CACOnB,KADP;AAEIkB,QAAAA,WAAW,EAAE,KAFjB;AAGIE,QAAAA,eAAe,EAAEnB,MAAM,CAACoB,KAH5B;AAIIC,QAAAA,SAAS,EAAE;AAJf;;AAMJ;AACR;AACA;;AACQ,SAAK7B,OAAO,CAAC8B,WAAb;AACI,6CACOvB,KADP;AAEIH,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKJ,OAAO,CAAC+B,mBAAb;AACI,6CACOxB,KADP;AAEID,QAAAA,KAAK,EAAEC,KAAK,CAACF,KAAN,CAAY2B,GAAZ,CACH,UAACC,KAAD,EAAQC,KAAR;AAAA,iBACID,KAAK,CAACT,EAAN,KAAahB,MAAM,CAACO,OAAP,CAAe,CAAf,EAAkBS,EAA/B,mCACQS,KADR;AACeE,YAAAA,IAAI,EAAG3B,MAAM,CAACO,OAAP,CAAe,CAAf,EAAkBoB;AADxC,eAEUF,KAHd;AAAA,SADG,CAFX;AAQI7B,QAAAA,OAAO,EAAE;AARb;;AAUJ,SAAKJ,OAAO,CAACoC,iBAAb;AACI,6CACO7B,KADP;AAEIsB,QAAAA,SAAS,EAAErB,MAAM,CAACoB,KAFtB;AAGIxB,QAAAA,OAAO,EAAE;AAHb;;AAKJ;AACI,aAAOG,KAAP;AAvFR;AAyFH","sourcesContent":["import * as Actions from './constants';\nconst isEmpty = require(\"is-empty\");\nconst initialState = {\n    loading: false,\n    parts: [],\n    pager: {}\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        /**\n         * add car\n         */\n        case Actions.ADD_PART:\n            return {\n                ...state,\n                loading: true,\n            };\n        case Actions.ADD_PART_SUCCESS:\n            return {\n                ...state,\n                //parts: state.parts.concat(action.payload),\n                pager: state.parts.concat(action.pager),\n                loading: false,\n            };\n        case Actions.ADD_PART_ERROR:\n            return {\n                ...state,\n                data: action.payload,\n                loading: false,\n            };\n        /**\n         * load master\n         */\n        case Actions.LOAD_PART:\n            return {\n                ...state,\n                loading: true,\n            };\n        case Actions.LOAD_PART_SUCCESS:\n            return {\n                ...state,\n                parts: action.partName,\n                partSection: action.partSection,\n                loading: false,\n                pager: action.pager\n            };\n        case Actions.LOAD_PART_ERROR:\n            return {\n                ...state,\n                data: action.payload,\n                loading: false,\n            };\n        /**\n         * DELETE PART\n         */\n         case Actions.DELETE_PART_SUCCESS:\n            return {\n                ...state,\n                //parts: state.parts.filter(item => item.ID !== action.payload),\n                pager: state.parts.filter(item => item.ID !== action.payload),\n                successData: false\n            }\n        case Actions.DELETE_PART_ERROR:\n            return {\n                ...state,\n                successData: false,\n                deleteErrorData: action.error,\n                errorData: '',\n            }\n        /**\n         * UPDATE PART\n         */\n        case Actions.UPDATE_PART:\n            return {\n                ...state,\n                loading: true,\n            };\n        case Actions.UPDATE_PART_SUCCESS:\n            return {\n                ...state,\n                pager: state.parts.map(    \n                    (items, index) => \n                        items.ID === action.payload[0].ID ? \n                            {...items, Name : action.payload[0].Name }    \n                                : items\n                    ),\n                loading: false,\n            };\n        case Actions.UPDATE_PART_ERROR:\n            return {\n                ...state,\n                errorData: action.error,\n                loading: false,\n            };\n        default: \n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}